library(ggpubr)
library(ggplot2)
required_packages <- c('MASS', 'rcompanion', 'lsr', 'vcd', 'DescTools')
for (p in required_packages) {
if(!require(p,character.only = TRUE)) {
install.packages(p, dep = TRUE)
}
}
dat<-read.csv("policeshooting.csv")
setwd("~/Desktop/Personal/MSDS/21-Summer/COMP_4441_Prob_Stats_1/comp4441_final")
dat<-read.csv("policeshooting.csv")
dat<-read.csv("fatal-police-shootings-data.csv")
countState <- table(dat$state)
barplot(countState, main="State Distribution",
xlab="Number of police shootings")
countDate <- table(dat$date)
barplot(countDate, main="Date Distribution",
xlab="Number of police shootings")
countAge <- table(dat$age)
barplot(countAge, main="Age Distribution",
xlab="Number of police shootings")
countArmed <- table(dat$armed)
barplot(countArmed, main="Armed Distribution",
xlab="Number of police shootings")
gun<-("gun")
unarmed<-("unarmed")
dat$group <- with(dat, ifelse(armed %in% gun, "gun",
ifelse(armed %in% unarmed, "unarmed", "other" )))
countArmed.grouped <- table(dat$group)
barplot(countArmed.grouped, main="Armed Distribution",
xlab="Number of police shootings")
View(dat)
dat<-read.csv("fatal-police-shootings-data.csv")
dat <- na.omit(dat)
countState <- table(dat$state)
barplot(countState, main="State Distribution",
xlab="Number of police shootings")
countDate <- table(dat$date)
barplot(countDate, main="Date Distribution",
xlab="Number of police shootings")
countAge <- table(dat$age)
barplot(countAge, main="Age Distribution",
xlab="Number of police shootings")
countArmed <- table(dat$armed)
barplot(countArmed, main="Armed Distribution",
xlab="Number of police shootings")
gun<-("gun")
unarmed<-("unarmed")
dat$group <- with(dat, ifelse(armed %in% gun, "gun",
ifelse(armed %in% unarmed, "unarmed", "other" )))
countArmed.grouped <- table(dat$group)
barplot(countArmed.grouped, main="Armed Distribution",
xlab="Number of police shootings")
shape(dat)
dim(dat)
dat<-read.csv("fatal-police-shootings-data.csv")
dat <- na.omit(dat)
countState <- table(dat$state)
barplot(countState, main="State Distribution",
xlab="Number of police shootings")
countDate <- table(dat$date)
barplot(countDate, main="Date Distribution",
xlab="Number of police shootings")
countAge <- table(dat$age)
barplot(countAge, main="Age Distribution",
xlab="Number of police shootings")
countArmed <- table(dat$armed)
barplot(countArmed, main="Armed Distribution",
xlab="Number of police shootings")
gun<-("gun")
unarmed<-("unarmed")
dat$group <- with(dat, ifelse(armed %in% gun, "gun",
ifelse(armed %in% unarmed, "unarmed", "other" )))
countArmed.grouped <- table(dat$group)
barplot(countArmed.grouped, main="Armed Distribution",
xlab="Number of police shootings")
countState <- table(dat$state)
barplot(countState, main="State Distribution",
xlab="Number of police shootings")
countDate <- table(dat$date)
barplot(countDate, main="Date Distribution",
xlab="Number of police shootings")
countAge <- table(dat$age)
barplot(countAge, main="Age Distribution",
xlab="Number of police shootings")
countArmed <- table(dat$armed)
barplot(countArmed, main="Armed Distribution",
xlab="Number of police shootings")
gun<-("gun")
unarmed<-("unarmed")
dat$group <- with(dat, ifelse(armed %in% gun, "gun",
ifelse(armed %in% unarmed, "unarmed", "other" )))
countArmed.grouped <- table(dat$group)
barplot(countArmed.grouped, main="Armed Distribution",
xlab="Number of police shootings")
countRace <- table(dat$race)
barplot(countRace, main="Armed Distribution",
xlab="Number of police shootings")
countArmed <- dat %>% group_by(armed) %>% summarize(count = count(id))
unique(dat$armed)
dat <- na.omit(dat)
dat <- dat[dat$armed != '']
dat <- na.omit(dat)
dat <- dat[dat$armed != '',]
unique(dat$armed)
countState <- table(dat$state)
barplot(countState, main="State Distribution",
xlab="Number of police shootings")
countDate <- table(dat$date)
barplot(countDate, main="Date Distribution",
xlab="Number of police shootings")
countAge <- table(dat$age)
barplot(countAge, main="Age Distribution",
xlab="Number of police shootings")
countArmed <- table(dat$armed)
barplot(countArmed, main="Armed Distribution",
xlab="Number of police shootings")
gun<-("gun")
unarmed<-("unarmed")
dat$group <- with(dat, ifelse(armed %in% gun, "gun",
ifelse(armed %in% unarmed, "unarmed", "other" )))
countArmed.grouped <- table(dat$group)
barplot(countArmed.grouped, main="Armed Distribution",
xlab="Number of police shootings")
countRace <- table(dat$race)
barplot(countRace, main="Race Distribution",
xlab="Number of police shootings")
dat <- na.omit(dat)
dat <- dat[!apply(dat == "", 1, all), ]
dat <- na.omit(dat)
dat <- dat[!apply(dat == "", 1, all), ]
dat<-read.csv("fatal-police-shootings-data.csv")
dat <- na.omit(dat)
dat <- dat[!apply(dat == "", 1, all), ]
countState <- table(dat$state)
barplot(countState, main="State Distribution",
xlab="Number of police shootings")
countDate <- table(dat$date)
barplot(countDate, main="Date Distribution",
xlab="Number of police shootings")
countAge <- table(dat$age)
barplot(countAge, main="Age Distribution",
xlab="Number of police shootings")
countArmed <- table(dat$armed)
barplot(countArmed, main="Armed Distribution",
xlab="Number of police shootings")
gun<-("gun")
unarmed<-("unarmed")
dat$group <- with(dat, ifelse(armed %in% gun, "gun",
ifelse(armed %in% unarmed, "unarmed", "other" )))
countArmed.grouped <- table(dat$group)
barplot(countArmed.grouped, main="Armed Distribution",
xlab="Number of police shootings")
countRace <- table(dat$race)
barplot(countRace, main="Race Distribution",
xlab="Number of police shootings")
unique(dat$race)
dat <- dat %>% na_if("") %>% na.omit
countState <- table(dat$state)
barplot(countState, main="State Distribution",
xlab="Number of police shootings")
countDate <- table(dat$date)
barplot(countDate, main="Date Distribution",
xlab="Number of police shootings")
countAge <- table(dat$age)
barplot(countAge, main="Age Distribution",
xlab="Number of police shootings")
countArmed <- table(dat$armed)
barplot(countArmed, main="Armed Distribution",
xlab="Number of police shootings")
gun<-("gun")
unarmed<-("unarmed")
dat$group <- with(dat, ifelse(armed %in% gun, "gun",
ifelse(armed %in% unarmed, "unarmed", "other" )))
countArmed.grouped <- table(dat$group)
barplot(countArmed.grouped, main="Armed Distribution",
xlab="Number of police shootings")
countRace <- table(dat$race)
barplot(countRace, main="Race Distribution",
xlab="Number of police shootings")
countState <- table(dat$state)
barplot(countState, main="State Distribution",
xlab="Number of police shootings")
countDate <- table(dat$date)
barplot(countDate, main="Date Distribution",
xlab="Number of police shootings")
countAge <- table(dat$age)
barplot(countAge, main="Age Distribution",
xlab="Number of police shootings")
countArmed <- table(dat$armed)
barplot(countArmed, main="Armed Distribution",
xlab="Number of police shootings")
gun<-("gun")
unarmed<-("unarmed")
dat$group <- with(dat, ifelse(armed %in% gun, "gun",
ifelse(armed %in% unarmed, "unarmed",
ifelse(armed %in% ("unknown"),
"Unknown Object", "other" ))))
countArmed.grouped <- table(dat$group)
barplot(countArmed.grouped, main="Armed Distribution (Modified)",
xlab="Number of police shootings")
countRace <- table(dat$race)
barplot(countRace, main="Race Distribution",
xlab="Number of police shootings")
View(dat)
unique(dat$armed)
sort(unique(dat$armed))
countState <- table(dat$state)
barplot(countState, main="State Distribution",
xlab="Number of police shootings")
countDate <- table(dat$date)
barplot(countDate, main="Date Distribution",
xlab="Number of police shootings")
countAge <- table(dat$age)
barplot(countAge, main="Age Distribution",
xlab="Number of police shootings")
countArmed <- table(dat$armed)
barplot(countArmed, main="Armed Distribution",
xlab="Number of police shootings")
gun<-("gun")
unarmed<-("unarmed")
dat$group <- with(dat, ifelse(armed %in% gun, "gun",
ifelse(armed %in% unarmed, "unarmed",
ifelse(armed %in% ("undetermined"),
"undetermined", "other" ))))
countArmed.grouped <- table(dat$group)
barplot(countArmed.grouped, main="Armed Distribution (Modified)",
xlab="Number of police shootings")
countRace <- table(dat$race)
barplot(countRace, main="Race Distribution",
xlab="Number of police shootings")
countState <- table(dat$state)
barplot(countState, main="State Distribution",
xlab="Number of police shootings")
countDate <- table(dat$date)
barplot(countDate, main="Date Distribution",
xlab="Number of police shootings", bins = 5)
countAge <- table(dat$age)
barplot(countAge, main="Age Distribution",
xlab="Number of police shootings")
countArmed <- table(dat$armed)
barplot(countArmed, main="Armed Distribution",
xlab="Number of police shootings")
gun<-("gun")
unarmed<-("unarmed")
dat$group <- with(dat, ifelse(armed %in% gun, "gun",
ifelse(armed %in% unarmed, "unarmed",
ifelse(armed %in% ("undetermined"),
"undetermined", "other" ))))
countArmed.grouped <- table(dat$group)
barplot(countArmed.grouped, main="Armed Distribution (Modified)",
xlab="Number of police shootings")
countRace <- table(dat$race)
barplot(countRace, main="Race Distribution",
xlab="Number of police shootings")
ggplot(dat,aes(x=date))+stat_function(density)+geom_jitter(alpha=.05)
ggplot(dat,aes(x=date))+stat_function(fun=density)+geom_jitter(alpha=.05)
ggplot(dat,aes(x=date, y=stat(density)))+geom_jitter(alpha=.05)
ggplot(dat,aes(x=date))+geom_histogram(aes(y=stat(density)))+geom_jitter(alpha=.05)
hist(dat$date)
ggplot(dat,aes(x=date))+geom_histogram(bins=5)+geom_jitter(alpha=.05)
ggplot(dat,aes(x=date))+geom_histogram()+geom_jitter(alpha=.05)
str(dat$date)
dat<-read.csv("fatal-police-shootings-data.csv")
dat$date <- as.Date(dat$date)
ggplot(dat,aes(x=date))+geom_histogram()+geom_jitter(alpha=.05)
countState <- table(dat$state)
barplot(countState, main="State Distribution",
xlab="Number of police shootings")
countDate <- table(dat$date)
barplot(countDate, main="Date Distribution",
xlab="Number of police shootings")
ggplot(dat,aes(x=date))+geom_histogram(aes(y=stat(density)))+geom_jitter(alpha=.05)
ggplot(dat,aes(x=date))+geom_histogram(aes(y=stat(density)), bins=5)+geom_jitter(alpha=.05)
ggplot(dat,aes(x=date))+geom_histogram(aes(y=stat(density)), binwidth=5)+geom_jitter(alpha=.05)
ggplot(dat,aes(x=date))+geom_histogram(aes(y=stat(density)), binwidth=5)+geom_jitter(alpha=.05)
hist(dat$date)
hist(dat$date, breaks='months')
hist(dat$date, breaks='year')
ggplot(dat,aes(x=date))+geom_histogram(), binwidth=5)+geom_jitter(alpha=.05)
ggplot(dat,aes(x=date))+geom_histogram(binwidth=5)+geom_jitter(alpha=.05)
ggplot(dat,aes(x=date, y=count))+geom_histogram(binwidth=5)+geom_jitter(alpha=.05)
ggplot(dat,aes(x=date, y=stat(density)))+geom_histogram(binwidth=5)+geom_jitter(alpha=.05)
ggplot(dat,aes(x=date))+geom_histogram(aes(y=stat(density)),binwidth=5)+geom_jitter(alpha=.05)
ggplot(dat,aes(x=date))+geom_histogram(mapping=aes(y=stat(density)),binwidth=5)+geom_jitter(alpha=.05)
ggplot(dat,aes(x=date))+geom_histogram(aes(y=stat(density)),binwidth=5)+geom_jitter(alpha=.05)+
geom_point(aes(x=val, y=dens))
set.seed(7654321)
df$dens<-dpois(0:max(samp),4)
set.seed(7654321)
samp <- rpois(100000, 4)
df <- data.frame(samp)
ggplot(data=df, aes(x=samp)) + geom_histogram(aes(y=stat(density)), binwidth=1)
View(df)
ggplot(dat,aes(x=date,y=count(id)))+geom_jitter(alpha=.05)
ggplot(dat,aes(x=date)) + geom_histogram()
ggplot(dat,aes(x=date)) + geom_histogram(bins=5)
ggplot(dat,aes(x=date)) + geom_histogram(breaks='years')
ggplot(dat,aes(x=date)) + geom_histogram(binwidth=5)
countState <- table(dat$state)
barplot(countState, main="State Distribution",
xlab="Number of police shootings")
countDate <- table(dat$date)
barplot(countDate, main="Date Distribution",
xlab="Number of police shootings")
countAge <- table(dat$age)
barplot(countAge, main="Age Distribution",
xlab="Number of police shootings")
countArmed <- table(dat$armed)
barplot(countArmed, main="Armed Distribution",
xlab="Number of police shootings")
gun<-("gun")
unarmed<-("unarmed")
dat$group <- with(dat, ifelse(armed %in% gun, "gun",
ifelse(armed %in% unarmed, "unarmed",
ifelse(armed %in% ("undetermined"),
"undetermined", "other" ))))
countArmed.grouped <- table(dat$group)
barplot(countArmed.grouped, main="Armed Distribution (Modified)",
xlab="Number of police shootings")
countRace <- table(dat$race)
barplot(countRace, main="Race Distribution",
xlab="Number of police shootings")
ggplot(dat, aes(x=date)) + geom_density()
ggplot(dat, aes(x=date, color=race)) +
geom_freqpoly(binwidth=25)
unique(dat$race)
dat <- dat %>% na_if("") %>% na.omit
unique(dat$race)
ggplot(dat, aes(x=date, color=race)) +
geom_freqpoly(binwidth=25)
ggplot(dat, aes(x=date, color=race)) +
geom_density(binwidth=25)
ggplot(dat, aes(x=date, color=race)) + geom_density()
ggplot(dat, aes(x=date, color=race)) + geom_freqpoly()
ggplot(dat, aes(x=date, color=race)) + geom_freqpoly(binwidth=5)
ggplot(dat, aes(x=date, color=race)) + geom_freqpoly(binwidth=25)
ggplot(dat, aes(x=date, color=race)) + geom_freqpoly(binwidth=20)
ggplot(dat, aes(x=date, color=race)) + geom_freqpoly(binwidth=35)
ggplot(dat, aes(x=date, color=race)) + geom_freqpoly(binwidth=50)
ggplot(dat, aes(x=date, color=race), title="Shootings Over Time by Race") + geom_freqpoly(binwidth=50)
ggplot(dat, aes(x=date, color=race)) + geom_freqpoly(binwidth=50) + labs(title="Shootings Over Time by Race")
ggplot(dat, aes(x=date, color=race)) + geom_freqpoly(binwidth=50) +
labs(title="Shootings Over Time by Race")
ggplot(dat, aes(x=date, color=race)) + geom_freqpoly(binwidth=50) +
labs(title="Shootings Over Time by Race")
t.test(manner_of_death~race,data=dat)
t.test(manner_of_death~gender,data=dat)
ggplot(dat, aes(x=body_camera)) + geom_histogram()
ggplot(dat, aes(x=body_camera)) + geom_freqpoly()
ggplot(dat, aes(x=body_camera, y=count(id)))
ggplot(dat, aes(x=body_camera)) + geom_histogram(aes(y=stat(frequency)))
gen_pop <- samp(vector(unique(dat$race)),5, replace=true)
gen_pop <- sample(vector(unique(dat$race)),5, replace=true)
gen_pop <- sample(unique(dat$race),5, replace=true)
gen_pop <- sample(unique(dat$race),5, replace=TRUE)
unique(dat$race)
unique(dat$race)
str(unique(dat$race))
gen_pop <- sample(unique(dat$race)[:5],5, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028))
gen_pop <- sample(unique(dat$race)[0:5],5, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028))
gen_pop <- sample(unique(dat$race)[0:5],5000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028))
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],5000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
View(gen_pop)
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],5000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = (314/315, 1/315))
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],5000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
unique(gen_pop$shot)
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],5000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1]
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],5000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],50000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop %>% group_by(race) %>% summarize(count(id))
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop %>% group_by(race) %>% summarize(count(shot))
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop %>% group_by(race) %>% summarize(count)
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop %>% group_by(race) %>% count(id)
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop %>% count(race)
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
unlist(gen_pop %>% count(race))
function gen_samp() {
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
(gen_pop %>% count(race))[n]
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop <- gen_pop %>% count(race)
View(gen_pop)
function gen_samp() {
function gen_samp() {
gen_samp <- function() {
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop <- gen_pop %>% count(race)
return (gen_pop$n)
}
rep(1000, gen_samp)
gen_samp <- function() {
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop <- gen_pop %>% count(race)
return (gen_pop$n)
}
replicate(1000, gen_samp())
gen_samp <- function() {
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop <- gen_pop %>% count(race)
return (gen_pop$n)
}
replicate(10, gen_samp())
mat <- matrix(rep(NA, 5000), ncol=5)
gen_samp <- function() {
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop <- gen_pop %>% count(race)
return (gen_pop$n)
}
mat <- matrix(rep(NA, 5000), ncol=5)
for (i in 1:1000) {
mat[i,] = gen_samp()
}
View(mat)
colnames(mat) <- gen_pop$race
obs.val <- dat %>% count(race)
View(obs.val)
obs.val$race["A"]
obs.val$race[1]
obs.val$n[obs.val$race == 'A']
obs.val <- dat %>% count(race)
race = 'A'
pnorm(obs.val$n[obs.val$race == race], mean=mean(mat[race]), sd=sd(mat[race]))
mean(mat[race])
mat[race]
mat$race
View(mat)
mat <- data.frame(mat)
colnames(mat) <- gen_pop$race
mat[race]
obs.val <- dat %>% count(race)
race = 'A'
pnorm(obs.val$n[obs.val$race == race], mean=mean(mat[race]), sd=sd(mat[race]))
mean(mat[race])
mat[race]
mat$race
obs.val <- dat %>% count(race)
race = 'A'
t.test(mat$A, obs.val[obs.val$race == race])
mat$A
list(mat$A)
unlist(mat$A)
c(mat$A)
t.test(unlist(mat$A), obs.val[obs.val$race == race])
t.test(vector(mat$A), obs.val[obs.val$race == race])
t.test(as.vector(mat$A), obs.val[obs.val$race == race])
as.vector(mat$A)
mean(mat$A)
t.test(mat$A, obs.val[obs.val$race == race])
obs.val <- dat %>% count(race)
race <- 'A'
mu <- obs.val[obs.val$race == race]
t.test(mat$A, mu)
t.test(mat$A)
t.test(mat$A, mu=mu)
t.test(mat$A, mu=mean)
mean
mean <- obs.val[obs.val$race == race]
t.test(mat$A, mu=mean)
mean
race <- 'A'
mean <- obs.val[obs.val$race == race]
mean
mean <- obs.val[obs.val$race == race,]
mean
mean <- obs.val[obs.val$race == race,2]
mean
t.test(mat$A, mu=mean)
obs.val <- dat %>% count(race)
race <- 'B'
mean <- obs.val[obs.val$race == race,2]
t.test(mat$B, mu=mean)
