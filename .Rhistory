dat$group <- with(dat, ifelse(armed %in% gun, "gun",
ifelse(armed %in% unarmed, "unarmed",
ifelse(armed %in% ("undetermined"),
"undetermined", "other" ))))
countArmed.grouped <- table(dat$group)
barplot(countArmed.grouped, main="Armed Distribution (Modified)",
xlab="Number of police shootings")
countRace <- table(dat$race)
barplot(countRace, main="Race Distribution",
xlab="Number of police shootings")
ggplot(dat, aes(x=date)) + geom_density()
ggplot(dat, aes(x=date, color=race)) +
geom_freqpoly(binwidth=25)
unique(dat$race)
dat <- dat %>% na_if("") %>% na.omit
unique(dat$race)
ggplot(dat, aes(x=date, color=race)) +
geom_freqpoly(binwidth=25)
ggplot(dat, aes(x=date, color=race)) +
geom_density(binwidth=25)
ggplot(dat, aes(x=date, color=race)) + geom_density()
ggplot(dat, aes(x=date, color=race)) + geom_freqpoly()
ggplot(dat, aes(x=date, color=race)) + geom_freqpoly(binwidth=5)
ggplot(dat, aes(x=date, color=race)) + geom_freqpoly(binwidth=25)
ggplot(dat, aes(x=date, color=race)) + geom_freqpoly(binwidth=20)
ggplot(dat, aes(x=date, color=race)) + geom_freqpoly(binwidth=35)
ggplot(dat, aes(x=date, color=race)) + geom_freqpoly(binwidth=50)
ggplot(dat, aes(x=date, color=race), title="Shootings Over Time by Race") + geom_freqpoly(binwidth=50)
ggplot(dat, aes(x=date, color=race)) + geom_freqpoly(binwidth=50) + labs(title="Shootings Over Time by Race")
ggplot(dat, aes(x=date, color=race)) + geom_freqpoly(binwidth=50) +
labs(title="Shootings Over Time by Race")
ggplot(dat, aes(x=date, color=race)) + geom_freqpoly(binwidth=50) +
labs(title="Shootings Over Time by Race")
t.test(manner_of_death~race,data=dat)
t.test(manner_of_death~gender,data=dat)
ggplot(dat, aes(x=body_camera)) + geom_histogram()
ggplot(dat, aes(x=body_camera)) + geom_freqpoly()
ggplot(dat, aes(x=body_camera, y=count(id)))
ggplot(dat, aes(x=body_camera)) + geom_histogram(aes(y=stat(frequency)))
gen_pop <- samp(vector(unique(dat$race)),5, replace=true)
gen_pop <- sample(vector(unique(dat$race)),5, replace=true)
gen_pop <- sample(unique(dat$race),5, replace=true)
gen_pop <- sample(unique(dat$race),5, replace=TRUE)
unique(dat$race)
unique(dat$race)
str(unique(dat$race))
gen_pop <- sample(unique(dat$race)[:5],5, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028))
gen_pop <- sample(unique(dat$race)[0:5],5, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028))
gen_pop <- sample(unique(dat$race)[0:5],5000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028))
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],5000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
View(gen_pop)
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],5000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = (314/315, 1/315))
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],5000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
unique(gen_pop$shot)
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],5000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1]
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],5000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],50000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop %>% group_by(race) %>% summarize(count(id))
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop %>% group_by(race) %>% summarize(count(shot))
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop %>% group_by(race) %>% summarize(count)
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop %>% group_by(race) %>% count(id)
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop %>% count(race)
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
unlist(gen_pop %>% count(race))
function gen_samp() {
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
(gen_pop %>% count(race))[n]
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop <- gen_pop %>% count(race)
View(gen_pop)
function gen_samp() {
function gen_samp() {
gen_samp <- function() {
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop <- gen_pop %>% count(race)
return (gen_pop$n)
}
rep(1000, gen_samp)
gen_samp <- function() {
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop <- gen_pop %>% count(race)
return (gen_pop$n)
}
replicate(1000, gen_samp())
gen_samp <- function() {
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop <- gen_pop %>% count(race)
return (gen_pop$n)
}
replicate(10, gen_samp())
mat <- matrix(rep(NA, 5000), ncol=5)
gen_samp <- function() {
gen_pop <- data.frame(id=1:5000, race=sample(unique(dat$race)[0:5],500000, replace=TRUE, prob = c(0.059, 0.601, 0.185, 0.134, 0.028)))
gen_pop$shot <- sample(c(0, 1), 5000, replace=TRUE, prob = c(314/315, 1/315))
gen_pop <- gen_pop[gen_pop$shot == 1,]
gen_pop <- gen_pop %>% count(race)
return (gen_pop$n)
}
mat <- matrix(rep(NA, 5000), ncol=5)
for (i in 1:1000) {
mat[i,] = gen_samp()
}
View(mat)
colnames(mat) <- gen_pop$race
obs.val <- dat %>% count(race)
View(obs.val)
obs.val$race["A"]
obs.val$race[1]
obs.val$n[obs.val$race == 'A']
obs.val <- dat %>% count(race)
race = 'A'
pnorm(obs.val$n[obs.val$race == race], mean=mean(mat[race]), sd=sd(mat[race]))
mean(mat[race])
mat[race]
mat$race
View(mat)
mat <- data.frame(mat)
colnames(mat) <- gen_pop$race
mat[race]
obs.val <- dat %>% count(race)
race = 'A'
pnorm(obs.val$n[obs.val$race == race], mean=mean(mat[race]), sd=sd(mat[race]))
mean(mat[race])
mat[race]
mat$race
obs.val <- dat %>% count(race)
race = 'A'
t.test(mat$A, obs.val[obs.val$race == race])
mat$A
list(mat$A)
unlist(mat$A)
c(mat$A)
t.test(unlist(mat$A), obs.val[obs.val$race == race])
t.test(vector(mat$A), obs.val[obs.val$race == race])
t.test(as.vector(mat$A), obs.val[obs.val$race == race])
as.vector(mat$A)
mean(mat$A)
t.test(mat$A, obs.val[obs.val$race == race])
obs.val <- dat %>% count(race)
race <- 'A'
mu <- obs.val[obs.val$race == race]
t.test(mat$A, mu)
t.test(mat$A)
t.test(mat$A, mu=mu)
t.test(mat$A, mu=mean)
mean
mean <- obs.val[obs.val$race == race]
t.test(mat$A, mu=mean)
mean
race <- 'A'
mean <- obs.val[obs.val$race == race]
mean
mean <- obs.val[obs.val$race == race,]
mean
mean <- obs.val[obs.val$race == race,2]
mean
t.test(mat$A, mu=mean)
obs.val <- dat %>% count(race)
race <- 'B'
mean <- obs.val[obs.val$race == race,2]
t.test(mat$B, mu=mean)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(ggplot2)
required_packages <- c('MASS', 'rcompanion', 'lsr', 'vcd', 'DescTools')
for (p in required_packages) {
if(!require(p,character.only = TRUE)) {
install.packages(p, dep = TRUE)
}
}
library("graphics")
library("gplots")
install.packages("gplots")
library("gplots")
dat<-read.csv("fatal-police-shootings-data.csv")
dat$date <- as.Date(dat$date)
dat <- dat %>% na_if("") %>% na.omit
countState <- table(dat$state)
barplot(countState, main="State Distribution",
xlab="Number of police shootings")
countDate <- table(dat$date)
barplot(countDate, main="Date Distribution",
xlab="Number of police shootings")
countAge <- table(dat$age)
barplot(countAge, main="Age Distribution",
xlab="Number of police shootings")
countArmed <- table(dat$armed)
barplot(countArmed, main="Armed Distribution",
xlab="Number of police shootings")
gun<-("gun")
unarmed<-("unarmed")
dat$group <- with(dat, ifelse(armed %in% gun, "gun",
ifelse(armed %in% unarmed, "unarmed",
ifelse(armed %in% ("undetermined"),
"undetermined", "other" ))))
countArmed.grouped <- table(dat$group)
barplot(countArmed.grouped, main="Armed Distribution (Modified)",
xlab="Number of police shootings")
countRace <- table(dat$race)
barplot(countRace, main="Race Distribution",
xlab="Number of police shootings")
ggplot(dat, aes(x=date, color=race)) + geom_freqpoly(binwidth=50) +
labs(title="Shootings Over Time by Race")
gender_mental <- table(dat$gender, dat$signs_of_mental_illness)
gender_mental
balloonplot(t(gender_mental), main ="gender and race", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
chisq.test(dat$gender, dat$signs_of_mental_illness)
gender_race<-table( dat$race,dat$gender)
gender_race
balloonplot(t(gender_race), main ="gender and race", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
fisher.test(gender_race, simulate.p.value=TRUE)
under_18<-(0:17)
a18_29<-(18:29)
a30_44<-(30:44)
a45_59<-(45:59)
a60_100<-(60:100)
dat$ageGroup <- with(dat, ifelse(age %in% under_18, "under 18",
ifelse(age %in% a18_29, "18-29",
ifelse(age %in% a30_44, "30-44",
ifelse(age %in% a45_59, "45-59",
"60 and older" )))))
gender_age<-table( dat$ageGroup,dat$gender)
gender_age
balloonplot(t(gender_age), main ="gender and age", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
fisher.test(gender_age, simulate.p.value=TRUE)
race_mental<-table( dat$race,dat$signs_of_mental_illness)
race_mental
balloonplot(t(race_mental), main ="race and signs of mental illness", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
fisher.test(race_mental, simulate.p.value=TRUE)
ggqqplot(obs.val[obs.val$race == race,2])
obs.val <- dat %>% count(race)
race <- 'B'
mean <- obs.val[obs.val$race == race,2]
t.test(mat$B, mu=mean)
View(mat)
ggqqplot(mat$B)
ggplot(data=mat$B)
qplot(data=mat$B)
hist(mat$B)
dat %>%
mutate(month = format(date, "%m"), year = format(date, "%Y"))
dat %>%
mutate(year = format(date, "%Y")) %>%
group_by(year, race) %>%
summarise(total = sum(id))
by_year <- data.frame(year=2015:2020)
View(by_year)
by_year$A <-
dat[dat$race == "A"] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% summarize(total = count(id))
dat[dat$race == "A"] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% summarize(total = count(id))
dat[dat$race == "A",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% summarize(total = count(id))
dat[dat$race == "A",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count(id)
dat[dat$race == "A",]
dat[dat$race == "A",] %>% mutate(year=format(date, "%Y")) %>% group_by(year)
dat[dat$race == "A",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count()
(dat[dat$race == "A",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year <- data.frame(year=2015:2020)
by_year$A <- (dat[dat$race == "A",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year <- data.frame(year=2015:2021)
by_year$A <- (dat[dat$race == "A",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year$B <- (dat[dat$race == "B",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year$W <- (dat[dat$race == "W",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year$H <- (dat[dat$race == "H",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year$O <- (dat[dat$race == "O",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year <- data.frame(year=2015:2021)
View(by_year)
by_year$A <- (dat[dat$race == "A",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year$H <- (dat[dat$race == "H",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year$O <- (dat[dat$race == "O",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
(dat[dat$race == "O",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())
by_year$N <- (dat[dat$race == "N",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year <- data.frame(year=2015:2021)
by_year$A <- (dat[dat$race == "A",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year$B <- (dat[dat$race == "B",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year$W <- (dat[dat$race == "W",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year$H <- (dat[dat$race == "H",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year$O <- (dat[dat$race == "O",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year <- data.frame(year=2015:2021)
by_year$A <- (dat[dat$race == "A",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year$B <- (dat[dat$race == "B",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year$W <- (dat[dat$race == "W",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year$H <- (dat[dat$race == "H",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
O <- (dat[dat$race == "O",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
O[7] <- 0
by_year$O <- O
by_year$N <- (dat[dat$race == "N",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year
by_year$total <- apply(by_year, 1, sum)
by_year
dat %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count()
View(dat)
dat %>% mutate(year=format(date, "%Y")) %>% group_by(year, race) %>% count()
dat %>% mutate(year=format(date, "%Y")) %>% group_by(year, race) %>% count() %>% sort(race)
sort(dat %>% mutate(year=format(date, "%Y")) %>% group_by(year, race) %>% count(), race)
dat %>% mutate(year=format(date, "%Y")) %>% group_by(year, race) %>% count()
dat %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count()
by_year$total <- apply(by_year[,2:7], 1, sum)
by_year
ggplot(data=by_year, aes(x=year))
ggplot(data=by_year, aes(x=year)) + geom_line
ggplot(data=by_year, aes(x=year)) + geom_line()
by_long <- by_year %>%
gather(Year, Race)
View(by_long)
by_long <- by_year %>%
gather(-Year, Race)
by_long <- by_year %>%
gather(Race, -Year)
by_long <- by_year %>%
gather(Race, Total, Year)
by_long <- by_year %>%
gather(Race, Total, year)
by_long <- by_year %>%
gather(year, Race, total)
by_long <- by_year %>%
gather(year, Race, total)
by_long <- by_year %>%
gather(year)
by_long <- by_year %>%
gather(key=year, race)
by_long <- by_year %>%
gather("race", -year)
by_long <- by_year %>%
gather(race, total, -year)
ggplot(data=by_long, aes(x=year, y=total, color=race)) + geom_line()
for (i in 2:7) {
ggqqplot(by_year[,i])
}
ggqqplot(by_year[,i])
for (i in 2:7) {
ggqqplot(by_year[,i])
}
ggqqplot(by_year[,i])
for (i in 2:7) {
print(ggqqplot(by_year[,i]))
}
t.test(by_year$W - by_year$B)
t.test(by_year$total - by_year$W)
t.test(data=by_long, total~race)
t.test(by_year$B - by_year$H)
by_long$group <- with(by_long, ifelse(race %in% "W", "W", "C"))
View(by_long)
t.test(data = by_long, total ~ group)
obs.val <- dat %>% count(race)
race <- 'W'
mean <- obs.val[obs.val$race == race,2]
t.test(mat$W, mu=mean)
View(obs.val)
mat$total <- apply(mat, 1, sum)
obs.val <- dat %>% count(race)
race <- 'B'
mean <- obs.val[obs.val$race == race,2]
t.test(mat$B / mat$total, mu=mean / sum(obs.val$n))
race <- 'W'
mean <- obs.val[obs.val$race == race,2]
t.test(mat$W / mat$total, mu=mean / sum(obs.val$n))
race <- 'A'
mean <- obs.val[obs.val$race == race,2]
t.test(mat$A / mat$total, mu=mean / sum(obs.val$n))
race <- 'H'
mean <- obs.val[obs.val$race == race,2]
t.test(mat$H / mat$total, mu=mean / sum(obs.val$n))
illness <- dat %>% mutate(year=format(date, "%Y")) %>% group_by(year, signs_of_mental_illness) %>% count()
View(illness)
t.test(data=illness, n ~ signs_of_mental_illness)
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(ggplot2)
required_packages <- c('MASS', 'rcompanion', 'lsr', 'vcd', 'DescTools')
for (p in required_packages) {
if(!require(p,character.only = TRUE)) {
install.packages(p, dep = TRUE)
}
}
library("graphics")
library("gplots")
ggplot(dat, aes(x=date, color=race)) + geom_freqpoly(binwidth=50) +
labs(title="Shootings Over Time by Race")
View(dat)
dat -> dat %>% mutate(year=format(date))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(ggplot2)
required_packages <- c('MASS', 'rcompanion', 'lsr', 'vcd', 'DescTools')
for (p in required_packages) {
if(!require(p,character.only = TRUE)) {
install.packages(p, dep = TRUE)
}
}
library("graphics")
library("gplots")
dat -> dat %>% mutate(year=format(date, "%Y"))
dat <- dat %>% mutate(year=format(date, "%Y"))
table(dat$year, dat$race)
dat <- dat %>% mutate(year=format(date, "%Y"))
by_year <- table(dat$year, dat$race)
by_year$total <- apply(by_year[,2:7], 1, sum)
by_year <- table(dat$year, dat$race)
by_year <- data.frame(table(dat$year, dat$race))
View(by_year)
by_year <- table(dat$year, dat$race)
by_year
by_year <- data.frame.matrix(table(dat$year, dat$race))
by_year <- data.frame(matrix(table(dat$year, dat$race)))
by_year
by_year <- as.data.frame(table(dat$year, dat$race))
View(by_year)
by_year <- cbind(by_year, rowSums(by_year))
by_year <- cbind(by_year, Total = rowSums(by_year))
by_year <- table(dat$year, dat$race)
by_year <- cbind(by_year, Total = rowSums(by_year))
by_year
by_long <- by_year %>%
gather(race, total, -year)
by_year <- data.frame(year=2015:2021)
by_year$A <- (dat[dat$race == "A",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year$B <- (dat[dat$race == "B",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year$W <- (dat[dat$race == "W",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year$H <- (dat[dat$race == "H",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
O <- (dat[dat$race == "O",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
O[7] <- 0
by_year$O <- O
by_year$N <- (dat[dat$race == "N",] %>% mutate(year=format(date, "%Y")) %>% group_by(year) %>% count())$n
by_year$total <- apply(by_year[,2:7], 1, sum)
by_year
by_long <- by_year %>%
gather(race, total, -year)
ggplot(data=by_long, aes(x=year, y=total, color=race)) + geom_line()
View(by_long)
for (i in 2:7) {
print(ggqqplot(by_year[,i]))
}
t.test(by_year$W - by_year$B)
t.test(by_year$total - by_year$W)
t.test(by_year$B - by_year$H)
by_long$group <- with(by_long, ifelse(race %in% "W", "W", "C"))
t.test(data = by_long, total ~ group)
t.test(by_year$W - by_year$B)
t.test(by_year$total - by_year$W)
t.test(by_year$B - by_year$H)
by_long$group <- with(by_long, ifelse(race %in% "W", "W", "C"))
t.test(data = by_long, total ~ group)
illness <- dat %>% mutate(year=format(date, "%Y")) %>% group_by(year, signs_of_mental_illness) %>% count()
t.test(data=illness, n ~ signs_of_mental_illness)
illness <- dat %>% mutate(year=format(date, "%Y")) %>% group_by(year, signs_of_mental_illness) %>% count()
t.test(data=illness, n ~ signs_of_mental_illness)
View(illness)
knitr::opts_chunk$set(echo = TRUE)
load("dat_one_sample.RData")
load("dat_one_sample.RData")
load("dat_one_sample.RData")
hist(dat_one_sample)
hist(dat_one_sample, binwidth=5)
ggplot(data=dat_one_sample)
ggplot(data=dat_one_sample) + geom_density()
qplot(dat_one_sample, geom='histogram')
qplot(dat_one_sample, geom='histogram', bins=30)
qplot(dat_one_sample, geom='histogram', bins=25)
qplot(dat_one_sample, geom='histogram', bins=10)
qplot(dat_one_sample, geom='histogram', bins=10\5)
qplot(dat_one_sample, geom='histogram', bins=15)
qplot(dat_one_sample, geom='histogram', bins=10)
qqplot(dat_one_sample)
ggqqplot(dat_one_sample)
t.test(dat_one_sample, mu=0.1)
qplot(dat_one_sample, geom='histogram', bins=10)
